// <auto-generated />
using GestionTienda;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionTienda.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20230517154715_IntitialMigration")]
    partial class IntitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarritoCompra", b =>
                {
                    b.Property<int>("carritosId_carrito")
                        .HasColumnType("int");

                    b.Property<int>("comprasid_compra")
                        .HasColumnType("int");

                    b.HasKey("carritosId_carrito", "comprasid_compra");

                    b.HasIndex("comprasid_compra");

                    b.ToTable("CarritoCompra");
                });

            modelBuilder.Entity("CarritoProductos", b =>
                {
                    b.Property<int>("carritosId_carrito")
                        .HasColumnType("int");

                    b.Property<int>("productosid_producto")
                        .HasColumnType("int");

                    b.HasKey("carritosId_carrito", "productosid_producto");

                    b.HasIndex("productosid_producto");

                    b.ToTable("CarritoProductos");
                });

            modelBuilder.Entity("CarritoUsuario", b =>
                {
                    b.Property<int>("carritosId_carrito")
                        .HasColumnType("int");

                    b.Property<int>("usuariosid_usuario")
                        .HasColumnType("int");

                    b.HasKey("carritosId_carrito", "usuariosid_usuario");

                    b.HasIndex("usuariosid_usuario");

                    b.ToTable("CarritoUsuario");
                });

            modelBuilder.Entity("GestionTienda.Entidades.Carrito", b =>
                {
                    b.Property<int>("Id_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_carrito"));

                    b.Property<int>("costo_total")
                        .HasColumnType("int");

                    b.HasKey("Id_carrito");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("GestionTienda.Entidades.Compra", b =>
                {
                    b.Property<int>("id_compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_compra"));

                    b.Property<string>("Direccion_env")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("costo")
                        .HasColumnType("int");

                    b.Property<int>("met_pago")
                        .HasColumnType("int");

                    b.HasKey("id_compra");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("GestionTienda.Entidades.Productos", b =>
                {
                    b.Property<int>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_producto"));

                    b.Property<string>("Nombre_producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("disponibilidad")
                        .HasColumnType("bit");

                    b.HasKey("id_producto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("GestionTienda.Entidades.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<int>("contra")
                        .HasColumnType("int");

                    b.Property<int>("correo")
                        .HasColumnType("int");

                    b.Property<int>("nombre")
                        .HasColumnType("int");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("CarritoCompra", b =>
                {
                    b.HasOne("GestionTienda.Entidades.Carrito", null)
                        .WithMany()
                        .HasForeignKey("carritosId_carrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionTienda.Entidades.Compra", null)
                        .WithMany()
                        .HasForeignKey("comprasid_compra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarritoProductos", b =>
                {
                    b.HasOne("GestionTienda.Entidades.Carrito", null)
                        .WithMany()
                        .HasForeignKey("carritosId_carrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionTienda.Entidades.Productos", null)
                        .WithMany()
                        .HasForeignKey("productosid_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarritoUsuario", b =>
                {
                    b.HasOne("GestionTienda.Entidades.Carrito", null)
                        .WithMany()
                        .HasForeignKey("carritosId_carrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionTienda.Entidades.Usuario", null)
                        .WithMany()
                        .HasForeignKey("usuariosid_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
